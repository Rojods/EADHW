use std::env;
use std::path::PathBuf;

// This build.rs has been generated by directly following the instructions
// of https://rust-lang.github.io/rust-bindgen/tutorial-3.html,
// https://docs.rust-embedded.org/book/interoperability/c-with-rust.html, and
// https://doc.rust-lang.org/cargo/reference/build-scripts.html
fn main() {
    println!("cargo:rustc-link-search=./");
    println!("cargo:rustc-link-lib=arith");
    println!("cargo::rerun-if-changed=arith.c");
    println!("cargo::rerun-if-changed=arith.h");

    let bindings = bindgen::Builder::default()
        .header("arith.h")
        .parse_callbacks(Box::new(bindgen::CargoCallbacks))
        .generate()
        .expect("Unable to generate bindings");
    let out_path = PathBuf::from(env::var("OUT_DIR").unwrap());
    bindings
        .write_to_file(out_path.join("arithm_bindings.rs"))
        .expect("Couldn't write bindings!");

    cc::Build::new().file("arith.c").compile("arith");
}
